// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id    @default(uuid())
  username       String
  profilePicture String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

enum ModelTrainingStatusEnum {
  PENDING
  GENERATED
  REJECTED
}

model Model {
  id              String      @id   @default(uuid())
  name            String
  type            ModelTypeEnum
  age             Int
  ethinicity      EthenecityEnum  
  eyeColor        EyeColorEnum
  bald            Boolean
  userId          String
  triggerWord     String?
  tensorPath      String?
  thumbnail       String?
  trainingStatus  ModelTrainingStatusEnum @default(PENDING)
  outputImages    OutputImages[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  falAiRequestId  String?
  zipUrl          String
  open            Boolean    @default(false)
  @@index([falAiRequestId])
}

enum OutputImageStatusEnum {
  PENDING
  GENERTED
  REJECTED
}

model OutputImages {
  id        String  @id   @default(uuid())
  imageUrl  String  @default("")
  modelId   String
  userId    String
  prompt    String
  falAiRequestId    String?
  status    OutputImageStatusEnum   @default(PENDING)
  model     Model   @relation(fields: [modelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([falAiRequestId])
}

model Packs {
  id        String   @id @default(uuid())
  name      String
  description String @default("")
  imageUrl1    String @default("")
  imageUrl2    String @default("")
  prompts   PackPrompts[]
}

model PackPrompts {
  id        String    @id @default(uuid())
  prompt    String
  packId    String
  pack      Packs    @relation(fields: [packId], references: [id])
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthenecityEnum {
  White
  Black
  Asian_American
  East_Asian
  South_East_Asian
  South_Asian
  Middle_Eastern
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}